import React, { useState } from "react";
/*ุจูุณุชูุฑุฏ React ุนุดุงู ููุชุจ ูููููุงุช.
ูุจูุณุชูุฑุฏ useState (Hook) ุนุดุงู ูุนุฑูู ูุชุบูุฑุงุช ุญุงูุฉ (state) ุฌูุง ุงูููููู.*/
import { Link } from "react-router-dom";
//ุจูุณุชูุฑุฏ Link ููุชูููู ุจูู ุงูุตูุญุงุช ุฏุงุฎูููุง ูู ุบูุฑ ุฅุนุงุฏุฉ ุชุญููู.
import MainNavigationBar from "../layout/MainNavigationBar";
//ููููู ุดุฑูุท ุงูุชููู ุงูุนููู (ุงููุงูุจุงุฑ).
import SiteFooter from "../layout/SiteFooter";
//ููููู ุงูููุชุฑ ุชุญุช ุงูุตูุญุฉ
import Toast from "./Toast";
//ููููู ุฑุณุงุฆู ููุจุซูุฉ ุตุบูุฑุฉ (ุชูุณุช) ูุนุฑุถ ุฅุดุนุงุฑุงุช ูุคูุชุฉ.
import "../../styles/ShoppingCartPage.css";
/*ุจูุนุฑูู ุงูููููู ุงูุฑุฆูุณู ShoppingCartPage.

ุจูุงุฎุฏ props ุฌุงูุฒุฉ ูู ุงูุฃุจ:*/
export default function ShoppingCartPage({
  currentUser, //ุจูุงูุงุช ุงููุณุชุฎุฏู (ููููุงูุจุงุฑ ุบุงูุจูุง).
  getTotalItems, //ุฏุงูุฉ ุชุฑุฌุน ุฅุฌูุงูู ุนุฏุฏ ุงููุทุน ูู ุงูุณูุฉ.
  cart, //ูุตูููุฉ ุนูุงุตุฑ ุงูุณูุฉ.
  updateQuantity, //ุฏุงูุฉ ูุชุญุฏูุซ ูููุฉ ุนูุตุฑ ูู ุงูุณูุฉ.
  removeFromCart, //ุฏุงูุฉ ูุญุฐู ุนูุตุฑ ูู ุงูุณูุฉ.
  setSelectedCategory, //ุฏุงูุฉ ูุชุญุฏูุฏ ุงููุฆุฉ ุงููุฎุชุงุฑุฉ (ููููุชุฑ ุบุงูุจูุง).
}) {
  //ุญุงูุฉ (state) ูุชุฎุฒูู ุฑุณุงูุฉ ุงูุชูุณุชุ ูุนุฑุถูุงุ ูููุนูุง.
  //ูุชุบูุฑ ุญุงูุฉ ุงุณูู toastMessage ูุชุฎุฒูู ูุต ุงูุฑุณุงูุฉ ุงููู ูุชุธูุฑ ูู ุงูุชูุณุช. ุจูุจุฏุฃ ูุงุถู "".
  const [toastMessage, setToastMessage] = useState("");
  //showToast: ูู ูุธูุฑ ุงูุชูุณุช ููุง ูุฃ. ุงูุจุฏุงูุฉ ูุฎูู false.
  const [showToast, setShowToast] = useState(false);
  /*toastType: ููุน ุงูุชูุณุช (ูุซูุงู success / remove). ุงูุจุฏุงูุฉ "success".
ุงูุชุนููู ุจูููู ุฅู ุฏู ุฌุฏูุฏ ูููุน ุงูุฑุณุงูุฉ.*/
  const [toastType, setToastType] = useState("success"); // New state for toast type

  //ุฏุงูุฉ ุจุชุงุฎุฏ message ูููุน typeุ ููู ูุง ุจุนุชูุด ููุน ุจูุจูู ุงูุงูุชุฑุงุถู "success"
  const showToastMessage = (message, type = "success") => {
    //ุจุชุฎุฒู ูุต ุงูุฑุณุงูุฉ ูู ุงูุญุงูุฉ.
    setToastMessage(message);
    //ุจุชุญุฏุฏ ููุน ุงูุชูุณุช (ููููุฏ ุงูููููู Toast ูุบูุฑ ุงูุดูู/ุงูููู ุญุณุจ ุงูููุน).
    setToastType(type);
    //ุจุชุฎูู ุงูุชูุณุช ูุธูุฑ.
    setShowToast(true);
  };

  //ุชุญุฏูุซ ุงููููุฉ ูุน ุชุญุฏูุฏ ุฑุณุงูุฉ ููุงุณุจุฉ
  //ุฏุงูุฉ ุจุชุชูุฏู ููุง ุงููุณุชุฎุฏู ูุฒูุฏ/ูููู ูููุฉ ุนูุตุฑ ูุนูู.
  const handleUpdateQuantity = (cartId, newQuantity) => {
    //ุจุชูุงุฏู ุงูุฏุงูุฉ ุงูุฌุงูุฉ ูู ุงูุฃุจ ูุชุญุฏูุซ ุงููููุฉ ูู ุงูู state ุงูุฃุนูู
    updateQuantity(cartId, newQuantity);
    /*ููุง ุจููุงุฑู: ูู newQuantity ุฃูุจุฑ ูู ุงููููุฉ ุงููุฏููุฉุ
ุจููุงูู ุงูุนูุตุฑ ุงููุฏูู ูู cart ุจุงูู cartId.
?.quantity (Optional chaining) ุนุดุงู ูู ุงูุนูุตุฑ ูุด ููุฌูุฏ ูุง ููุณุฑุด ุงูููุฏ.
ูู ุงูุฌุฏูุฏุฉ ุฃูุจุฑ ูู ุงููุฏููุฉ โ ูุจูู ุงููุณุชุฎุฏู ุฒููุฏ ุงููููุฉ.*/
    if (newQuantity > cart.find((item) => item.cartId === cartId)?.quantity) {
      //ูู ุฒุงุฏ: ุงุนุฑุถ ุชูุณุช ุจุฑุณุงูุฉ ูุฌุงุญ.
      showToastMessage("โ Quantity increased successfully!");
    } else {
      //ุบูุฑ ูุฏู: ูุนูุงูุง ููุต ุงููููุฉ โ ุงุนุฑุถ ุฑุณุงูุฉ โูููุฉ ููุชโ.
      showToastMessage("๐ Quantity decreased");
    }
  };
  //ููุงุญุธุฉ: ุงูููุงุฑูุฉ ุฏู ุจุชูุชุฑุถ ุฅู cart ูุณู ููู ุงููููุฉ ุงููุฏููุฉ ูุจู ูุง ููุนูุณ ุงูุชุญุฏูุซ. ูู updateQuantity ุจุชุนุฏู ุงููุฑุฌุน ููุณู ููุฑูุงุ ุณุงุนุชูุง ูููู ุชุญุชุงุฌ ุชุฌูุจ ุงููููุฉ ุงููุฏููุฉ ูุจู ุงููุฏุงุก.

  //ุฏุงูุฉ ุจุชุชูุฏู ููุง ุงููุณุชุฎุฏู ูุญุฐู ุนูุตุฑ ูู ุงูุณูุฉ.
  //ุจุชุงุฎุฏ cartId ููุนูุตุฑ ุงููู ุนุงูุฒ ูุญุฐูู.

  const handleRemoveFromCart = (cartId) => {
    //ุจุชูุงุฏู ุงูุฏุงูุฉ ุงูุฌุงูุฉ ูู ุงูุฃุจ ูุญุฐู ุงูุนูุตุฑ ูู ุงูู state ุงูุฃุนูู.
    removeFromCart(cartId);
    //ุชุนุฑุถ ุชูุณุช ุจุฑุณุงูุฉ ุญุฐูุ ูููุน "remove" (ุนุดุงู ุงูู Toast ููููููุง/ูุนุฑุถูุง ุจุดูู ูุฎุชูู).
    showToastMessage("๐๏ธ Item removed from cart", "remove");
  };

  //ูุงุฌูุฉ ุงูุนุฑุถ (JSX)
  return (
    //ููุฑุฌูุน ุนูุตุฑ ุฌุฐุฑ ุจุตู CSS page-container ูููููุฉ ุงูุตูุญุฉ.
    //ูุนุฑุถ ุงููุงูุจุงุฑ ูููุ ูููุฑุฑ ูู ุงููุณุชุฎุฏู ูุฅุฌูุงูู ุงูุนูุงุตุฑ.
    <div className="page-container">
      <MainNavigationBar
        currentUser={currentUser}
        getTotalItems={getTotalItems}
      />
      {/*ููุง ุจูุนุฑุถ ูุญุชูู ุงูุณูุฉ. ูู ุงูุณูุฉ ูุงุถูุฉุ ูุนุฑุถ ุฑุณุงูุฉ. ูู ูููุง ุนูุงุตุฑุ ูุนุฑุถูุง ูู ูุงุฆูุฉ.*/}
      {/*ุฅุฐุง ูุงูุช ุงูุณูุฉ ูุงุถูุฉุ ูุนุฑุถ ุฑุณุงูุฉ ู ุฑุงุจุท ูููุชุงุจุนุฉ ููุชุณูู.*/}
      <div className="cart-content">
        <h1>Shopping Cart</h1>
        {/*ุดุฑุท ุจุงูู ternary: ูู ุงูุณูุฉ ูุงุถูุฉ (ุทูููุง 0) ุงุนุฑุถ ูุงุฌูุฉ โุณูุฉ ูุงุฑุบุฉโโฆ*/}
        {cart.length === 0 ? (
          <div className="empty-cart">
            <p>Your cart is empty</p>
            {/*ุฒุฑ ููุฑุฌูุน ููุชุณูู ุจุงุณุชุฎุฏุงู Link ูุตูุญุฉ /home (ุชูููู ุฏุงุฎูู)*/}
            <Link to="/home" className="continue-shopping-btn">
              Continue Shopping
            </Link>
          </div>
        ) : (
          //ูุฅูุง (ุงูุณูุฉ ูููุง ุนูุงุตุฑ) ุงุนุฑุถ ูุงุฆูุฉ ุงูุนูุงุตุฑ.
          <div className="cart-items">
            {/*ูุณุชุฎุฏู map ูุนุฑุถ ูู ุนูุตุฑ ูู ุงูุณูุฉ.*/}
            {cart.map((item) => (
              <div key={item.cartId} className="cart-item">
                {/*ุจูููู ุนูู ูู ุนูุตุฑ ูู ุงูุณูุฉ ุจู .map.*/}
                {/*ูู ุนูุตุฑ ูู cartId ูุฑูุฏุ ูุณุชุฎุฏูู ูููุชุงุญ (key) ูุชูุงุฏู ุงูุฃุฎุทุงุก ูู React.*/}
                {/*ุตูุฑุฉ ุงูููุชุฌ. alt ููุต ุจุฏูู/ูุตูู.*/}
                <img src={item.thumbnail} alt={item.title} />
                {/*ุญุงููุฉ ุชูุงุตูู ุงูููุชุฌ.*/}
                <div className="cart-item-details">
                  {/*ุงุณู/ุนููุงู ุงูููุชุฌ.*/}
                  <h3>{item.title}</h3>
                  <p className="cart-item-category">
                    {/*ุณุทุฑ ููุชุตููู. {" "} ุจุณ ูุณุงูุฉ ูู JSX*/}
                    Category:{" "}
                    {/*ุชูุณูู ุดูู ุงูุชุตููู:
                    ูุณุชุจุฏู - ุจูุณุงูุฉ (ูุซูุงู mens-shoes โ mens shoes).
                    regex \b\w ูููุท ุฃูู ุญุฑู ูู ูู ูููุฉ ููุญูููู ูุงุจูุชุงู โ Mens Shoes.*/}
                    {item.category
                      .replace("-", " ")
                      .replace(/\b\w/g, (l) => l.toUpperCase())}
                  </p>
                  {/*ุณุนุฑ ุงููุทุนุฉ ุงููุงุญุฏุฉ ููููุชุฌ.*/}
                  <p className="cart-item-price">${item.price}</p>
                  <div className="quantity-controls">
                    {/*ุญุงููุฉ ุฃุฒุฑุงุฑ ุงููููุฉ.*/}
                    {/* , ู ุจูุนุฑุถ ุฏุงูุฉ handle update quantity ุฒุฑ โโโ ูุชูููู ุงููููุฉ:
                    ุนูุฏ ุงูุถุบุท: ููุงุฏู handleUpdateQuantity ุจูููุฉ ุฃูู 1.
                    disabled ูููุน ุงููุฒูู ูุฃูู ูู 1.*/}
                    <button
                      onClick={() =>
                        handleUpdateQuantity(item.cartId, item.quantity - 1)
                      }
                      className="quantity-btn"
                      disabled={item.quantity <= 1}
                    >
                      -
                    </button>
                    {/*ูุนุฑุถ ุงููููุฉ ุงูุญุงููุฉ.*/}
                    <span className="quantity-display">{item.quantity}</span>
                    {/*ุฒุฑ โ+โ ูุฒูุงุฏุฉ ุงููููุฉ: ููุงุฏู ููุณ ุงูุฏุงูุฉ ุจูููุฉ +1.*/}
                    <button
                      onClick={() =>
                        handleUpdateQuantity(item.cartId, item.quantity + 1)
                      }
                      className="quantity-btn"
                    >
                      +
                    </button>
                  </div>
                  {/*ุงูุฅุฌูุงูู ุงูุฌุฒุฆู ููุนูุตุฑ = ุงูุณุนุฑ ร ุงููููุฉ.
                  toFixed(2) ุนุดุงู ูุธูุฑ ุจููุฒูุชูู ุนุดุฑูุชูู (ุชูุณูู ูููุณ).*/}
                  <p className="item-total">
                    Subtotal: ${(item.price * item.quantity).toFixed(2)}
                  </p>
                </div>
                {/*ุฒุฑ ุญุฐู ุงูุนูุตุฑ ูู ุงูุณูุฉ: ููุงุฏู handleRemoveFromCart.*/}
                <button
                  onClick={() => handleRemoveFromCart(item.cartId)}
                  className="remove-btn"
                >
                  Remove
                </button>
              </div>
            ))}
            {/* ุจุนุฏ ุนุฑุถ ูู ุงูุนูุงุตุฑุ ูุนุฑุถ ููุฎุต ุงูุณูุฉ ุงููู ูู ุงุฌูุงูู ุนูุงุตุฑ + ุงุฌูุงูู ูุจูุบ:*/}
            <div className="cart-summary">
              <div className="cart-stats">
                {/*ุฅุฌูุงูู ุนุฏุฏ ุงูุนูุงุตุฑ ูู ุงูุณูุฉ ุจุงุณุชุฎุฏุงู ุงูุฏุงูุฉ getTotalItems.*/}
                {/*ูุฅุฌูุงูู ุงูููู: ุจุงุณุชุฎุฏุงู reduce ุจูุฌูุน ูู (ุงูุณุนุฑ ร ุงููููุฉ) ุนูู ุจุนุถ.
                  0 ูู ูููุฉ ุงูุจุฏุงูุฉ ููุฌูุน.
                  toFixed(2) ูุชูุณูู ุงูุฑูู ูุนููุฉ.*/}
                <p>Total Items: {getTotalItems()}</p>
                <h2>
                  Total Amount: $
                  {cart
                    .reduce((sum, item) => sum + item.price * item.quantity, 0)
                    .toFixed(2)}
                </h2>
              </div>
            </div>
          </div>
        )}
        {/*ููุงูุฉ ุดุฑุท ุงูุณูุฉ: ูู ูุงุถูุฉ ุฃู ูููุง ุนูุงุตุฑ.*/}
      </div>
      <SiteFooter setSelectedCategory={setSelectedCategory} />
      {/*ุนุฑุถ ุงูููุชุฑุ ูุชูุฑูุฑ setSelectedCategory ูู ุงูููุชุฑ ููู ุฑูุงุจุท ุชุบููุฑ ุงูุชุตููู.*/}

      {/*ููููู ุงูุชูุณุช:
      message: ูุต ุงูุฑุณุงูุฉ ุงููุนุฑูุถุฉ.
      show: ูู ุงูุชูุณุช ุธุงูุฑ ุฃู ูุง.
      type: ููุน ุงูุชูุณุช (success/remove โฆ) ุนุดุงู ูุบููุฑ ุงูุณุชุงูู.
      onClose: ููุง ูุชูููุ ูุฎูู showToast = false*/}
      <Toast
        message={toastMessage}
        show={showToast}
        type={toastType}
        onClose={() => setShowToast(false)}
      />
    </div>
  );
}
